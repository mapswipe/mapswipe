# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
    'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

# Use the cocoapod CDN to speed up pod install
# https://blog.cocoapods.org/CocoaPods-1.7.2/
source 'https://cdn.cocoapods.org/'


platform :ios, 15.1
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
end

# Disable use of AdId with analytics
# See #527 and
# https://rnfirebase.io/analytics/usage#disable-ad-id-usage-on-ios
# $RNFirebaseAnalyticsWithoutAdIdSupport=true
#
use_frameworks! :linkage => :static

target 'mapswipe' do
  config = use_native_modules!
  $RNFirebaseAsStaticFramework = true

  pod 'Firebase/AnalyticsWithoutAdIdSupport', '11.2.0', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseAuth', :modular_headers => true
  pod 'FirebaseAuthInterop', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'RecaptchaInterop', :modular_headers => true
  pod 'FirebaseAppCheckInterop', :modular_headers => true
  pod 'FirebaseDatabase', :modular_headers => true
  pod 'leveldb-library', :modular_headers => true

  pod 'RNFBStorage', :path => '../node_modules/@react-native-firebase/storage'

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++20'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-std=c++20'
      end
    end
  end
end
